---
- hosts: localhost
  gather_facts: false
  connection: local

  tasks: 
    - pause:
        prompt: "Enter password"
        echo: no
      when: password is undefined
      register: password_input

    - set_fact:
        password: "{{ password_input.user_input }}"
      when: password is undefined

    - ec2_vpc_net_info:
        region: eu-west-2
        filters:
          "tag:Name": ansible
      register: ansible_vpc

    - ec2_vpc_subnet_info:
        region: eu-west-2
        filters:
          vpc-id: "{{ ansible_vpc.vpcs[0].id }}"
      register: ansible_subnet

    - name: webserver security group
      ec2_group:
        name: windows
        description: windows sg
        vpc_id: "{{ ansible_vpc.vpcs[0].id }}"
        region: eu-west-2
        tags:
          Name: windows
          app: ansible
          env: dev
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
          - proto: tcp
            from_port: 3389
            to_port: 3389
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all RDP on port 3389
          - proto: tcp
            from_port: 5986
            to_port: 5986
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all HTTPS via WinRM on 5986
          - proto: tcp
            from_port: 5985
            to_port: 5985
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all HTTP via WinRM on 5985
      register: windows_group

    - name: create a new ec2 key
      ec2_key:
        name: aws-ansible-key
        region: eu-west-2
        state: present
      register: ec2_key

    - name: Save private key to disk
      copy: content="{{ ec2_key.key.private_key }}" dest="./aws-ansible-key.pem" mode=0600
      when: ec2_key.changed

    - name: windows create ec2 instance
      ec2:
        key_name: aws-ansible-key
        instance_type: t2.micro
        image: ami-0c80f4021417f8488
        region: eu-west-2
        #group: "{{ windows_group.group_name }}"
        group_id: sg-0107b19bf9acbcfd4
        count: 1
        vpc_subnet_id: "{{ ansible_subnet.subnets[0].id }}"
        #vpc_subnet_id: subnet-6756a42b
        user_data: |
          <powershell>
          $content = (Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1' -UseBasicParsing).content
          iex $content
          $password = "{{ password }}" | ConvertTo-SecureString -AsPlainText -Force
          New-LocalUser 'ansible' -Password $password
          Add-LocalGroupMember -Group 'Administrators' -Member 'ansible'
          </powershell>
          <persist>true</persist>
        wait: yes
        assign_public_ip: yes
        instance_tags:
          Name: winweb01
          app: ansible
          env: dev
          os: windows
      register: ec2

    - name: associate new elastic IPs with each of the instances
      ec2_eip:
        device_id: "{{ item }}"
        release_on_disassociation: yes
        region: eu-west-2
      loop: "{{ ec2.instance_ids }}"

# - name: get the Administrator password
#   ec2_win_password:
#     profile: my-boto-profile
#     instance_id: i-XXXXXX
#     region: eu-west-2
#     key_file: "~/aws-creds/my_test_key.pem"